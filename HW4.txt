		Problem 1) p169
	2.19.1)
sll	$t2, $t0, 44
$t2 = 0x00000000
or	$t2, $t2, $t1
$t2 = 0x12345678

	2.19.2)
sll	$t2, $t0, 4
$t2 = 0xAAAAAAA0
andi	$t2, $t2, -1
$t2 = 0xAAAAAAA0

	2.19.3)
srl	$t2, $t0, 3
$t2 = 0x15555555
andi	$t2, $t2, 0xFFEF
$t2 = 0x00005545

	2.20)
andi	$t1, $t1, 0x03FFFFFF
andi	$t2, $t0, 0x0001F800
sll	$t2, $t2. 15
add	$t1, $t1, $t2

	2.22)
lw	$t1, 0($s1)
sll	$t1, $t1, 4

	2.23)
$t2 = 0x00000001
$t2 = 0x00000003

	2.26.1) $t1 = 10 , $s2 = ?
$t1 = 0
$s2 = 20

	2.26.2)
int i = 10;
int B = 0;
while(i>0){
	B += 2;
	i--;
}

	2.26.3)
N*5 + 2

	2.27)
	add	$t0, $zero, $zero
AIN:	add	$t1, $zero, $zero
BIN:	add	$t3, $t1, $t0
	sll	$t2, $t1, 4
	add	$t2, $t2, $s2
	sw	$t3, 0($t2)
	addi	$t1, $t1, 1
	beq	$t1, $s1, BOUT		
	j	BIN
BOUT:	addi	$t0, $t0, 1
	beq	$t0, $s0, AOUT
	j	AIN
AOUT:

	2.28)
A((7b-1)+4)-1+1
If a = 10 b = 1 then it would take 100 mips instructions to complete.

	2.29)
for(i = 0; i<100; i++){
	result += MemArray[i];
}

	2.30)
	addi	$t1, $s0, 400
LOOP:	lw	$s1, 0($s0)
	add	$s2, $s2, $s1
	addi	$s0, $s0, 4
	bne	$t1, $s0, LOOP

		Problem 2)
addi $t1 $zero 31	# $t1 = 31
addi $t0 $zero 31	# $t0 = 31
loop:srlv $t3 $a0 $t1	# $t3 = $a0/(2*$t1)
andi $t3 $t3 1		# $t3 = $t3 & 1
addi $t3 $t3 48		# $t3 += 48
sub $t4 $t0 $t1		# $t4 = $t0 - $t1
add $t2 $a1 $t4		# $t2 = $a1 + $t4
sb $t3 0($t2)		# A[$t0] = $t3
beq $t1 $zero done	# if($t1 == 0) Exit Loop
addi $t1 $t1 -1		# else $t1--
j loop			# Repeat Loop
done:sb $zero 1($t2)	# A[$t0+1] = 0;
jr $ra			# Returns to linked address.

i = 31;
j = 31;
for(j=31;j!=0;j--){
	l = (( x/(2*j) )&1) + 48;
	m = i - j;
	k = y + m;
	*k = l;
}
k[1] = l
return;








































